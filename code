#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>
#include <time.h>

void pagamento(); //PRE DECLARAÇAO DE FUNÇAO

typedef struct {   // STRUCT PARA ARMAZENAR OS DADOS DO PRODUTO
        char nome_prod[50], marca_prod[50], peso[50], litros[50];
        int codigo_prod;
        float preco;
    }Produtos;

typedef struct {   // STRUCT PARA GERAR O CUPOM FISCAL AO FINAL DA COMPRA
        char nome_prod[50], marca_prod[50], peso[50], litros[50];
        float preco;
        int quantidade;
    }CupomFiscal;

void menu(){

    int i, z, x, j, opcao_menu;

        Produtos p[21];


    //ALIMENTOS//

    strcpy(p[1].nome_prod, "ARROZ");   // ATRIBUIÇÃO DOS DADOS
    strcpy(p[1].marca_prod, "PILECCO NOBRE");
    strcpy(p[1].peso, "1KG");
    p[1].preco = 4.30;
    p[1].codigo_prod = 1;

    strcpy(p[2].nome_prod, "FEIJÃO");
    strcpy(p[2].marca_prod, "CAMIL");
    strcpy(p[2].peso, "1KG");
    p[2].preco = 3.00;
    p[2].codigo_prod = 2;

    strcpy(p[3].nome_prod, "MACARRÃO INSTANTÂNEO");
    strcpy(p[3].marca_prod, "NISSIN");
    strcpy(p[3].peso, "80g");
    p[3].preco = 1.39;
    p[3].codigo_prod = 3;

    strcpy(p[4].nome_prod, "AÇÚCAR REFINADO");
    strcpy(p[4].marca_prod, "UNIÃO");
    strcpy(p[4].peso, "1KG");
    p[4].preco = 2.69;
    p[4].codigo_prod = 4;

    strcpy(p[5].nome_prod, "FARINHA DE TRIGO");
    strcpy(p[5].marca_prod, "DONA BENTA");
    strcpy(p[5].peso, "1KG");
    p[5].preco = 3.59;
    p[5].codigo_prod = 5;


    //BEBIDAS//

    strcpy(p[6].nome_prod, "REFRIGERANTE COLA");
    strcpy(p[6].marca_prod, "COCA COLA");
    strcpy(p[6].litros, "2.5L");
    p[6].preco = 7.69;
    p[6].codigo_prod = 6;

    strcpy(p[7].nome_prod, "REFRIGERANTE COLA");
    strcpy(p[7].marca_prod, "PEPSI");
    strcpy(p[7].litros, "1.5L");
    p[7].preco = 5.99;
    p[7].codigo_prod = 7;

    strcpy(p[8].nome_prod, "ÁGUA MINERAL");
    strcpy(p[8].marca_prod, "CRYSTAL");
    strcpy(p[8].litros, "500ml");
    p[8].preco = 2.50;
    p[8].codigo_prod = 8;

    strcpy(p[9].nome_prod, "CERVEJA 12 UNID.");
    strcpy(p[9].marca_prod, "SKOL");
    strcpy(p[9].litros, "350ml");
    p[9].preco = 28.68;
    p[9].codigo_prod = 9;

    strcpy(p[10].nome_prod, "SUCO DE UVA");
    strcpy(p[10].marca_prod, "DEL VALLE");
    strcpy(p[10].litros, "1L");
    p[10].preco = 5.99;
    p[10].codigo_prod = 10;


    //LIMPEZA//

    strcpy(p[11].nome_prod, "DETERGENTE NEUTRO");
    strcpy(p[11].marca_prod, "YPÊ");
    strcpy(p[11].litros, "500ml");
    p[11].preco = 2.16;
    p[11].codigo_prod = 11;

    strcpy(p[12].nome_prod, "SABÃO LÍQUIDO");
    strcpy(p[12].marca_prod, "OMO");
    strcpy(p[12].litros, "3L");
    p[12].preco = 26.90;
    p[12].codigo_prod = 12;

    strcpy(p[13].nome_prod, "ÁGUA SANITÁRIA");
    strcpy(p[13].marca_prod, "SUPER CÂNDIDA");
    strcpy(p[13].litros, "2L");
    p[13].preco = 5.57;
    p[13].codigo_prod = 13;

    strcpy(p[14].nome_prod, "DESINFETANTE");
    strcpy(p[14].marca_prod, "OMO");
    strcpy(p[14].litros, "900ml");
    p[14].preco = 8.99;
    p[14].codigo_prod = 14;

    strcpy(p[15].nome_prod, "ESPONJA DE LIMPEZA 3 UNID.");
    strcpy(p[15].marca_prod, "SCOTCH-BRITE");
    p[15].preco = 5.19;
    p[15].codigo_prod = 15;


    // HIGIENE //

    strcpy(p[16].nome_prod, "PAPEL HIGIÊNICO");
    strcpy(p[16].marca_prod, "PERSONAL VIP");
    p[16].preco = 13.76;
    p[16].codigo_prod = 16;

    strcpy(p[17].nome_prod, "ESCOVA DE DENTE 2 UNID.");
    strcpy(p[17].marca_prod, "COLGATE");
    p[17].preco = 16.90;
    p[17].codigo_prod = 17;

    strcpy(p[18].nome_prod, "FIO DENTAL");
    strcpy(p[18].marca_prod, "COLGATE");
    p[18].preco = 7.82;
    p[18].codigo_prod = 18;

    strcpy(p[19].nome_prod, "CREME DENTAL");
    strcpy(p[19].marca_prod, "CLOSE UP");
    p[19].preco = 6.13;
    p[19].codigo_prod = 19;

    strcpy(p[20].nome_prod, "SABONETE EM BARRA");
    strcpy(p[20].marca_prod, "DOVE");
    p[20].preco = 2.31;
    p[20].codigo_prod = 20;


    printf("BEM VINDO A MERCEARIA ONLINE");


    //MENU DE OPÇÕES

    do{

        printf("\n\tMENU DE OPÇÕES\n");
        printf("\n1 - Alimentos\n");
        printf("2 - Bebidas\n");
        printf("3 - Produtos de Limpeza\n");
        printf("4 - Produtos de Higiêne\n");
        printf("5 - Sair\n");
        printf("\nDigite o número da opção desejada: ");
        scanf("%i",&opcao_menu);
        system("cls"); //LIMPA A TELA

        switch(opcao_menu){
            case 1:
                for (i = 1; i <= 5; i++){ //  MOSTRANDO OS DADOS DOS ALIMENTOS
                        printf ("\nNOME DO PRODUTO: %s \nMARCA: %s \nPESO: %s \nPREÇO: R$%.2f \nCódigo: %i \n", p[i].nome_prod, p[i].marca_prod, p[i].peso, p[i].preco, p[i].codigo_prod);
                }
                break;

            case 2:
                for (z = 6; z <= 10; z++){ //  MOSTRANDO OS DADOS DAS BEBIDAS
                    printf ("\nNOME DO PRODUTO: %s \nMARCA: %s \nLITROS: %s \nPREÇO: R$%.2f \nCódigo: %i \n", p[z].nome_prod, p[z].marca_prod, p[z].litros, p[z].preco, p[z].codigo_prod);
                }
                break;

            case 3:
                for (x = 11; x <= 15; x++){ //  MOSTRANDO OS DADOS DOS PRODUTOS DE LIMPEZA
                    printf ("\nNOME DO PRODUTO: %s \nMARCA: %s \nLITROS: %s \nPREÇO: R$%.2f \nCódigo: %i \n", p[x].nome_prod, p[x].marca_prod, p[x].litros, p[x].preco, p[x].codigo_prod);
                }
                break;

            case 4:
            	for (j = 16; j <= 20; j++){ //  MOSTRANDO OS DADOS DOS PRODUROS DE HIGIENE
                    printf ("\nNOME DO PRODUTO: %s \nMARCA: %s \nPREÇO: R$%.2f \nCódigo: %i \n", p[j].nome_prod, p[j].marca_prod, p[j].preco, p[j].codigo_prod);
                }
            	break;

            case 5:
                system("cls"); //LIMPA A TELA
                printf("FIM DA COMPRA!\n");
                return 0; //FECHA O PROGRAMA

                break;
            default:
                printf("OPÇÃO INVáLIDA!\nTENTE NOVAMENTE:\n");
                break;
        }

    }while(opcao_menu>5);


    //FIM MENU DAS OPÇÕES


}

int main(){

setlocale(LC_ALL, "Portuguese");

    //char soun;
    int cont=0, opcao[10], data_retirada, forma_pagamento, unidades, cod_escolha, resposta;
    float valor_total=0, desconto;
    //time_t data_hoje;
                                /* DECLARAÇÃO DOS PRODUTOS */

        Produtos p[21];

    //ALIMENTOS//

    strcpy(p[1].nome_prod, "ARROZ");   // ATRIBUIÇÃO DOS DADOS
    strcpy(p[1].marca_prod, "PILECCO NOBRE");
    strcpy(p[1].peso, "1KG");
    p[1].preco = 4.30;
    p[1].codigo_prod = 1;

    strcpy(p[2].nome_prod, "FEIJÃO");
    strcpy(p[2].marca_prod, "CAMIL");
    strcpy(p[2].peso, "1KG");
    p[2].preco = 3.00;
    p[2].codigo_prod = 2;

    strcpy(p[3].nome_prod, "MACARRÃO INSTANTÂNEO");
    strcpy(p[3].marca_prod, "NISSIN");
    strcpy(p[3].peso, "80g");
    p[3].preco = 1.39;
    p[3].codigo_prod = 3;

    strcpy(p[4].nome_prod, "AÇÚCAR REFINADO");
    strcpy(p[4].marca_prod, "UNIÃO");
    strcpy(p[4].peso, "1KG");
    p[4].preco = 2.69;
    p[4].codigo_prod = 4;

    strcpy(p[5].nome_prod, "FARINHA DE TRIGO");
    strcpy(p[5].marca_prod, "DONA BENTA");
    strcpy(p[5].peso, "1KG");
    p[5].preco = 3.59;
    p[5].codigo_prod = 5;


    //BEBIDAS//

    strcpy(p[6].nome_prod, "REFRIGERANTE COLA");
    strcpy(p[6].marca_prod, "COCA COLA");
    strcpy(p[6].litros, "2.5L");
    p[6].preco = 7.69;
    p[6].codigo_prod = 6;

    strcpy(p[7].nome_prod, "REFRIGERANTE COLA");
    strcpy(p[7].marca_prod, "PEPSI");
    strcpy(p[7].litros, "1.5L");
    p[7].preco = 5.99;
    p[7].codigo_prod = 7;

    strcpy(p[8].nome_prod, "ÁGUA MINERAL");
    strcpy(p[8].marca_prod, "CRYSTAL");
    strcpy(p[8].litros, "500ml");
    p[8].preco = 2.50;
    p[8].codigo_prod = 8;

    strcpy(p[9].nome_prod, "CERVEJA 12 UNID.");
    strcpy(p[9].marca_prod, "SKOL");
    strcpy(p[9].litros, "350ml");
    p[9].preco = 28.68;
    p[9].codigo_prod = 9;

    strcpy(p[10].nome_prod, "SUCO DE UVA");
    strcpy(p[10].marca_prod, "DEL VALLE");
    strcpy(p[10].litros, "1L");
    p[10].preco = 5.99;
    p[10].codigo_prod = 10;


    //LIMPEZA//

    strcpy(p[11].nome_prod, "DETERGENTE NEUTRO");
    strcpy(p[11].marca_prod, "YPÊ");
    strcpy(p[11].litros, "500ml");
    p[11].preco = 2.16;
    p[11].codigo_prod = 11;

    strcpy(p[12].nome_prod, "SABÃO LÍQUIDO");
    strcpy(p[12].marca_prod, "OMO");
    strcpy(p[12].litros, "3L");
    p[12].preco = 26.90;
    p[12].codigo_prod = 12;

    strcpy(p[13].nome_prod, "ÁGUA SANITÁRIA");
    strcpy(p[13].marca_prod, "SUPER CÂNDIDA");
    strcpy(p[13].litros, "2L");
    p[13].preco = 5.57;
    p[13].codigo_prod = 13;

    strcpy(p[14].nome_prod, "DESINFETANTE");
    strcpy(p[14].marca_prod, "OMO");
    strcpy(p[14].litros, "900ml");
    p[14].preco = 8.99;
    p[14].codigo_prod = 14;

    strcpy(p[15].nome_prod, "ESPONJA DE LIMPEZA 3 UNID.");
    strcpy(p[15].marca_prod, "SCOTCH-BRITE");
    p[15].preco = 5.19;
    p[15].codigo_prod = 15;


    // HIGIENE //

    strcpy(p[16].nome_prod, "PAPEL HIGIÊNICO");
    strcpy(p[16].marca_prod, "PERSONAL VIP");
    p[16].preco = 13.76;
    p[16].codigo_prod = 16;

    strcpy(p[17].nome_prod, "ESCOVA DE DENTE 2 UNID.");
    strcpy(p[17].marca_prod, "COLGATE");
    p[17].preco = 16.90;
    p[17].codigo_prod = 17;

    strcpy(p[18].nome_prod, "FIO DENTAL");
    strcpy(p[18].marca_prod, "COLGATE");
    p[18].preco = 7.82;
    p[18].codigo_prod = 18;

    strcpy(p[19].nome_prod, "CREME DENTAL");
    strcpy(p[19].marca_prod, "CLOSE UP");
    p[19].preco = 6.13;
    p[19].codigo_prod = 19;

    strcpy(p[20].nome_prod, "SABONETE EM BARRA");
    strcpy(p[20].marca_prod, "DOVE");
    p[20].preco = 2.31;
    p[20].codigo_prod = 20;

                                /* FIM DECLARAÇÃO DOS PRODUTOS */

    CupomFiscal c[21] = {0}; //ARRAY PARA CUPOM FISCAL COM VALORES EM 0 PARA PRINT POSTERIOR

    do{

        menu(); //CHAMA A FUNÇÃO MENU

        do{

            printf("\nEscolha um produto digitando seu código: ");
            scanf("%i", &cod_escolha);

            if (cod_escolha > 20){                  //validação das opções
                printf("\nOPÇÃO INVÁLIDA!\n");
            }

            printf("Digite quantas unidades deseja: ");
            scanf ("%i", &unidades);

            cont = cont + 1 * unidades;     //contador para saber quantos produtos foram escolhidos

            for (int ii=1; ii<=20; ii++){
                if(cod_escolha == ii){
                    valor_total = valor_total + p[ii].preco * unidades; // CALCULO DO VALOR TOTAL DOS PRODUTOS ESCOLHIDOS
                    memcpy(&c[ii].preco, &p[ii].preco, sizeof(p[ii].preco)+1);
                    memcpy(&c[ii].quantidade, &unidades, sizeof(unidades)+1);
                    memcpy(&c[ii].nome_prod, &p[ii].nome_prod, strlen(p[ii].nome_prod)+1);
                    memcpy(&c[ii].marca_prod, &p[ii].marca_prod, strlen(p[ii].marca_prod)+1);
                    memcpy(&c[ii].peso, &p[ii].peso, strlen(p[ii].peso)+1);
                    memcpy(&c[ii].litros, &p[ii].litros, strlen(p[ii].litros)+1);
                }
            }

            //SUBMENU DENTRO DA COMPRA
            printf("\nEscolha uma opção: \n1 - Voltar para o menu \n2 - Adcionar ao carrinho outro produto da mesma categoria \n3 - Finalizar a compra\n ");
            scanf("%i", &resposta);


            //VALIDAÇÃO DAS OPÇÕES DO SUBMENU
            if (resposta >= 4){
                printf("\nOPÇÃO INVÁLIDA! Escolha novamente: \n");
                scanf("%d", &resposta);
            }

            if(resposta == 1){
                system("cls"); //LIMPA A TELA
            }

            if(resposta == 3){
                system("cls"); //LIMPA A TELA
                pagamento();
            }

        }
        while (resposta == 2);

    }
    while (resposta == 1);


return 0;
}

void pagamento(){ //FUNÇÃO QUE IRÁ CALCULAR O PAGAMENTO DA COMPRA
    int day, month, year, parcelas, parcela, data_retirada, forma_pagamento, unidades, cod_escolha, resposta;
    float valor_total=0, desconto;

    CupomFiscal c[21] = {0}; //ARRAY PARA CUPOM FISCAL COM VALORES EM 0 PARA PRINT POSTERIOR

    //UTILIZANDO A BIBLIOTECA TIME.H PODEMOS REALIZAR OPERAÇÕES USANDO A DATA E HORA LOCAL
    time_t now;
    time(&now);
    struct tm *local = localtime(&now);
    day = local->tm_mday;                       //DIA DO MES (1 A 31)
    month = local->tm_mon +1;                   //MES DO ANO (0 A 11)
    year = local->tm_year+1900;                 //ANO DESDE 1900

    printf("Seu carrinho: ");
    for(int i=0; i<=20; i++){
        if(c[i].quantidade != 0){ //IMPRIME SOMENTE O QUE O USUARIO SELECIONOU E COMPROU SE FOR DIFERENTE DE 0
            printf("\nR$%.2f----------Qtd:%d----------%s", c[i].preco, c[i].quantidade, c[i].nome_prod);
            printf("\n");
        }
    }
        printf("\nValor total da compra = R$%.2f\n", valor_total);
        printf("\nSelecione a forma de pagamento digitando uma opção:\n >1 - À vista \n >2 - Parcelado (ate 3x s/ juros) ");
        printf("\n");
        scanf("%i", &forma_pagamento);
        printf("\n\nDaqui a quantos dias deseja retirar a compra? ");
        scanf("%i", &data_retirada);

        day = local->tm_mday + data_retirada;
        mktime(&now);


    //CALCULO DOS VALORES FINAIS E DATAS DE RETIRADA
    if (forma_pagamento == 1 && valor_total > 100 && data_retirada>=30){   //desconto de 10% para compras maiores que 100 reais e pagamento à vista
        desconto = (valor_total * 10) /100;
        valor_total = valor_total - desconto;
        printf("\nO valor com desconto é: R$%.2f e a retirada é em %02d/%02d/%02d", valor_total, day, month, year);
    }else if(forma_pagamento == 2){
        printf("Em quantas vezes deseja parcelar a compra? ");
        scanf("%d", &parcelas);
        parcela=valor_total/parcelas;
        printf("\nValor total da compra: R$%.2f", valor_total);
        printf("\nQtd de parcelas: %d\nValor da parcela: %d", parcelas, parcela);
        printf("\nData de retirada: %02d/%02d/%02d", day, month, year);
    }else{
        printf("Opcao invalida! Selecione novamente: ");
        scanf("%i", &forma_pagamento);
    }
}

